// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum TipoUsuario {
  ADMIN
  MEMBRO
}

model Usuario {
  id                          String      @id @default(uuid())
  nomeCompleto                String
  nomeUsuario                 String      @unique
  email                       String      @unique
  telefone                    String      @unique
  emailVerificado             Boolean     @default(false) @map("email_verificado")
  telefoneVerificado          Boolean     @default(false) @map("telefone_verificado")
  senhaHash                   String      @map("senha_hash") @db.Text
  avatar                      String?     @default("null")
  tipo                        TipoUsuario @default(MEMBRO)
  recuperarSenhaToken         String?     @default("null") @map("recuperar_senha_token")
  recuperarSenhaDataExpiracao String?     @default("null") @map("recuperar_senha_data_expiracao")
  activo                      Boolean     @default(true)
  createdAt                   DateTime    @default(now()) @map("created_at")
  updatedAt                   DateTime    @default(now()) @map("updated_at")
  deletedAt                   DateTime?   @map("deleted_at")

  @@index([email, telefone])
  @@map("usuarios")
}

model Sessao {
  id        String    @id @default(uuid())
  usuarioId String    @map("usuario_id")
  token     String
  expira_em DateTime
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@index([usuarioId, token])
  @@map("sessao")
}

model Projecto {
  id        String    @id @default(uuid())
  nome      String    @unique
  resumo    String
  sobre     String    @db.LongText
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@index([nome])
  @@map("projectos")
}

model Comentario {
  id         String    @id @default(uuid())
  userId     String
  projectoId String
  texto      String
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @default(now()) @map("updated_at")
  deletedAt  DateTime? @map("deleted_at")

  @@map("comentarios")
}

model Classificacao {
  id         String    @id @default(uuid())
  userId     String    @unique
  projectoId String
  pontos     Int
  comentario String?
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @default(now()) @map("updated_at")
  deletedAt  DateTime? @map("deleted_at")

  @@map("classificacoes")
}

enum Modalidade {
  ONLINE
  PRESENCIAL
}

model Eventos {
  id          String      @id @default(uuid())
  titulo      String      @unique
  descricao   String
  localizacao String
  modalidade  Modalidade?
  dataHora    DateTime    @map("data_hora")
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @default(now()) @map("updated_at")
  deletedAt   DateTime?   @map("deleted_at")

  @@index([titulo])
  @@map("eventos")
}
